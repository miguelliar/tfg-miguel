{
    "investigador": {
        "Create": "INSERT INTO investigador (email, nombre, apellidos, universidad, departamento, area, figura) VALUES ($1, $2, $3, $4, $5, $6, $7)",
        "Update": "UPDATE investigador SET nombre=$1, apellidos=$2, universidad=$3, departamento=$4, area=$5, figura=$6 WHERE email=$7",
        "error": {
            "Executing": "Error executing query",
            "Inserting": "Error inserting investigador",
            "MaxIndex": "Error obtaining the maximum index"
        },
        "fetch": {
            "All": "SELECT * FROM investigador LIMIT $1 OFFSET $2",
            "ByEmail": "SELECT * FROM investigador WHERE email=$1",
            "ByNombreAutor": "SELECT * FROM investigador WHERE email IN (SELECT email_investigador FROM nombre_autor WHERE nombre_autor = $1)",
            "ByLikeNombreAutor": "SELECT * FROM investigador WHERE email IN (SELECT email_investigador FROM nombre_autor WHERE nombre_autor ILIKE $1)",
            "ByProyectoCode": "SELECT * FROM investigador WHERE email in (SELECT email_investigador FROM participa WHERE codigo_proyecto = $1)"
        },
        "pagination": {
            "INITIAL_PAGE": 1,
            "ITEMS_PER_PAGE": 12
        },
        "search": {
            "SearchByName": "SELECT * FROM investigador WHERE email ILIKE $1::text OR nombre ILIKE $1::text OR apellidos ILIKE $1::text OR universidad ILIKE $1::text ORDER BY email DESC LIMIT $2 OFFSET $3",
            "MaxNumberOfPages": "SELECT COUNT(*) as count FROM investigador WHERE email ILIKE $1::text OR nombre ILIKE $1::text OR apellidos ILIKE $1::text OR universidad ILIKE $1::text"
        }
    },
    "participa": {
        "Create": "INSERT INTO participa (email_investigador, codigo_proyecto) VALUES ($1, $2)",
        "error": {
            "Inserting": "Error inserting participa"
        }
    },
    "proyecto": {
        "Create": "INSERT INTO proyecto (codigo, ip, coip, titulo, financiado, inicio, fin) VALUES ($1, $2, $3, $4, $5, $6, $7)",
        "Update": "UPDATE proyecto SET ip=$1, coip=$2, titulo=$3, financiado=$4, inicio=$5, fin=$6 WHERE codigo=$7",
        "error": {
            "Executing": "Error executing query",
            "Inserting": "Error inserting proyecto",
            "MaxIndex": "Error obtaining the maximum index",
            "Updating": "Error updating the proyecto"
        },
        "fetch": {
            "All": "SELECT * FROM proyecto LIMIT $1 OFFSET $2",
            "AllByInvestigadores": "SELECT * FROM proyecto WHERE codigo IN (SELECT codigo_proyecto FROM participa WHERE email_investigador = ANY($1::text[]))",
            "ByCodigo": "SELECT * FROM proyecto WHERE codigo=$1",
            "DistinctProyectosByInvestigadores": "SELECT proyecto.* FROM proyecto WHERE proyecto.codigo IN (SELECT participa.codigo_proyecto FROM participa WHERE participa.email_investigador = ANY($1::text[]) GROUP BY participa.codigo_proyecto HAVING COUNT(DISTINCT participa.email_investigador) = 1)",
            "JoinByInvestigadores": "SELECT proyecto.* FROM proyecto JOIN participa ON proyecto.codigo = participa.codigo_proyecto WHERE participa.email_investigador = ANY($1::text[]) GROUP BY proyecto.codigo HAVING COUNT(DISTINCT participa.email_investigador) = ARRAY_LENGTH($1::text[], 1) "
        },
        "pagination": {
            "INITIAL_PAGE": 1,
            "ITEMS_PER_PAGE": 12
        },
        "search": {
            "SearchByName": "SELECT * FROM proyecto WHERE titulo ILIKE $1::text OR codigo ILIKE $1::text OR ip ILIKE $1::text OR financiado ILIKE $1::text ORDER BY inicio DESC LIMIT $2 OFFSET $3",
            "MaxNumberOfPages": "SELECT COUNT(*) as count FROM proyecto WHERE titulo ILIKE $1::text OR codigo ILIKE $1::text OR ip ILIKE $1::text OR financiado ILIKE $1::text "
        }
    }
}