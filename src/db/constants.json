{
    "investigador": {
        "Create": "INSERT INTO investigador (email, nombre, apellidos, universidad, departamento, area, figura) VALUES ($1::text, $2::text, $3::text, $4::text, $5::text, $6::text, $7::text)",
        "Update": "UPDATE investigador SET nombre=$1::text, apellidos=$2::text, universidad=$3::text, departamento=$4::text, area=$5::text, figura=$6::text WHERE email=$7::text",
        "Delete": "DELETE FROM investigador WHERE email = $1::text",
        "error": {
            "Executing": "Error executing query",
            "MaxIndex": "Error obtaining the maximum index",
            "Update": "Error updating the investigador",
            "add": {
                "Duplicated": "There is already another investigador with that email",
                "Standard": "Error inserting investigador"
            },
            "delete": {
                "email": "There is no investigador to delete with that code"
            }
        },
        "fetch": {
            "AllMinimumData": "SELECT email, nombre, apellidos FROM investigador ORDER BY email LIMIT $1::int OFFSET $2::int",
            "All": "SELECT * FROM investigador ORDER BY email LIMIT $1::int OFFSET $2::int",
            "ByEmail": "SELECT * FROM investigador WHERE email=$1::text ORDER BY email",
            "ByNombreAutor": "SELECT * FROM investigador WHERE email IN (SELECT email_investigador FROM nombre_autor WHERE nombre_autor = $1::text) ORDER BY email",
            "ByLikeNombreAutor": "SELECT * FROM investigador WHERE email IN (SELECT email_investigador FROM nombre_autor WHERE nombre_autor ILIKE $1::text) ORDER BY email",
            "ByProyectoCode": "SELECT * FROM investigador WHERE email in (SELECT email_investigador FROM participa WHERE codigo_proyecto = $1::text) ORDER BY email"
        },
        "pagination": {
            "INITIAL_PAGE": 1,
            "ITEMS_PER_PAGE": 12
        },
        "search": {
            "SearchByMinimumData": "SELECT email, nombre, apellidos FROM investigador WHERE email ILIKE $1::text OR nombre ILIKE $1::text OR apellidos ILIKE $1::text OR universidad ILIKE $1::text ORDER BY email DESC LIMIT $2 OFFSET $3",
            "SearchByName": "SELECT * FROM investigador WHERE email ILIKE $1::text OR nombre ILIKE $1::text OR apellidos ILIKE $1::text OR universidad ILIKE $1::text ORDER BY email DESC LIMIT $2 OFFSET $3",
            "MaxNumberOfPages": "SELECT COUNT(*) as count FROM investigador WHERE email ILIKE $1::text OR nombre ILIKE $1::text OR apellidos ILIKE $1::text OR universidad ILIKE $1::text",
            "SearchInvestigadoresNotParticipating": "SELECT * FROM investigador WHERE (email ILIKE $1::text OR nombre ILIKE $1::text OR apellidos ILIKE $1::text OR universidad ILIKE $1::text) AND email NOT IN (SELECT email_investigador FROM participa WHERE codigo_proyecto = $2::text) LIMIT 50"
        }
    },
    "participa": {
        "fetch": {
            "ByEmailInvestigador": "SELECT * FROM participa WHERE email_investigador=$1::text ORDER BY codigo_proyecto",
            "ByCodigo": "SELECT * FROM participa WHERE codigo_proyecto=$1::text ORDER BY email_investigador",
            "ByCodigoAndEmail": "SELECT * FROM participa WHERE codigo_proyecto=$1::text AND email_investigador=$2::text ORDER BY nombre_autor",
            "NombreDeAutor": "SELECT DISTINCT nombre_autor, COUNT(*) OVER(PARTITION BY nombre_autor) AS repetitions FROM participa WHERE email_investigador=$1::text ORDER BY repetitions"
        },
        "Create": "INSERT INTO participa (email_investigador, codigo_proyecto, nombre_autor) VALUES ($1::text, $2::text, $3::text)",
        "delete": {
            "ByPK": "DELETE FROM participa WHERE codigo_proyecto=$1::text AND email_investigador=$2::text",
            "ByCodigo": "DELETE FROM participa WHERE codigo_proyecto = $1::text",
            "ByEmail": "DELETE FROM participa WHERE email_investigador = $1::text"
        },
        "error": {
            "add": {
                "Duplicated": "There is already a participation for that proyecto with that investigador",
                "Investigador": "There doesn't exist any investigador with that email",
                "Proyecto": "There doesn't exist any proyecto with that code",
                "Standard": "Error inserting participa"
            },
            "Delete": "Error deleting entry from DB",
            "Fetch": "Error fetching the information"
        }
    },
    "proyecto": {
        "Create": "INSERT INTO proyecto (codigo, ip, coip, titulo, financiado, inicio, fin) VALUES ($1::text, $2::text, $3::text, $4::text, $5::text, $6::date, $7::date)",
        "Delete": "DELETE FROM proyecto WHERE codigo = $1::text",
        "Update": "UPDATE proyecto SET ip=$1::text, coip=$2::text, titulo=$3::text, financiado=$4::text, inicio=$5::date, fin=$6::date WHERE codigo=$7::text",
        "error": {
            "Executing": "Error executing query",
            "MaxIndex": "Error obtaining the maximum index",
            "add": {
                "Duplicated": "Error: There is a proyecto with that codigo already existing",
                "Standard": "Error inserting proyecto"
            },
            "delete": {
                "code": "There is no proyecto to delete with that code"
            },
            "update": {
                "Inexisting": "There doesn't exist any error with that codigo that can be updated",
                "Standard": "Error updating the proyecto"
            }
        },
        "fetch": {
            "AllMinimumData": "SELECT codigo, titulo FROM proyecto ORDER BY codigo LIMIT $1::int OFFSET $2::int",
            "All": "SELECT * FROM proyecto ORDER BY codigo LIMIT $1::int OFFSET $2::int",
            "AllByInvestigadores": "SELECT codigo, titulo FROM proyecto WHERE codigo IN (SELECT codigo_proyecto FROM participa WHERE email_investigador = ANY($1::text[])) ORDER BY codigo",
            "ByCodigo": "SELECT * FROM proyecto WHERE codigo=$1::text",
            "ByCodigos": "SELECT * FROM proyecto where codigo = ANY($1::text[]) ORDER BY codigo",
            "DistinctProyectosByInvestigadores": "SELECT proyecto.codigo, proyecto.titulo FROM proyecto WHERE proyecto.codigo IN (SELECT participa.codigo_proyecto FROM participa WHERE participa.email_investigador = ANY($1::text[]) GROUP BY participa.codigo_proyecto HAVING COUNT(DISTINCT participa.email_investigador) = 1) ORDER BY codigo",
            "JoinByInvestigadores": "SELECT proyecto.codigo, proyecto.titulo FROM proyecto JOIN participa ON proyecto.codigo = participa.codigo_proyecto WHERE participa.email_investigador = ANY($1::text[]) GROUP BY proyecto.codigo HAVING COUNT(DISTINCT participa.email_investigador) = ARRAY_LENGTH($1::text[], 1) ORDER BY codigo"
        },
        "pagination": {
            "INITIAL_PAGE": 1,
            "ITEMS_PER_PAGE": 12
        },
        "search": {
            "SearchMinimumData": "SELECT codigo, titulo FROM proyecto WHERE titulo ILIKE $1::text OR codigo ILIKE $1::text OR ip ILIKE $1::text OR financiado ILIKE $1::text ORDER BY inicio LIMIT $2 OFFSET $3",
            "SearchByName": "SELECT * FROM proyecto WHERE titulo ILIKE $1::text OR codigo ILIKE $1::text OR ip ILIKE $1::text OR financiado ILIKE $1::text ORDER BY inicio LIMIT $2 OFFSET $3",
            "MaxNumberOfPages": "SELECT COUNT(*) as count FROM proyecto WHERE titulo ILIKE $1::text OR codigo ILIKE $1::text OR ip ILIKE $1::text OR financiado ILIKE $1::text "
        }
    },
    "transaction": {
        "Start": "BEGIN",
        "Commit": "COMMIT;",
        "End": "End;"
    }
}